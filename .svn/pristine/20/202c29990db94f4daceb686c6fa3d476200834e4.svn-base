<template>
  <div class="role">
    <Card>
      <Row slot="title"
           class="common-table-title">
        <Col span="12"
             class='title'>
        <CommonIcon :size='16'
                    :type='$route.meta.icon'></CommonIcon>
        {{$route.meta.title}}
        </Col>
        <Col span="12"
             class='action'>
        <Button type="info"
                size="small"
                icon="md-add"
                @click="formOpenModal()">添加</Button>
        <Button type="warning"
                size="small"
                icon="md-sync"
                @click="getData()">刷新</Button>
        </Col>
      </Row>
      <Row class="common-search-box"
           @keydown.enter.native="searchData">
        <Col span="24">
        <Input v-model="searchFields.name"
               placeholder="请输入识别码" />
        <Button type="primary"
                icon="search"
                :loading="searchLoading"
                @click='searchData'>搜索</Button>
        </Col>
      </Row>
      <Table :loading="tableLoading"
             :columns="tableFieldsRender"
             :data="tableList"></Table>
      <Page v-if='tableList.length>0'
            show-elevator
            :page-size="pageSize"
            :total="total"
            :current="curPage"
            @on-change="pageChange"
            @on-page-size-change='pageChangeSize'></Page>
      <Modal ref='formModal'
             width='400'
             v-model="formShow"
             :loading='modalButtonShowLoading'
             @on-ok='submitData'
             @on-cancel='formCloseModal'
             :title='$route.meta.title+"详情"'>
        <Spin fix
              v-if='formLoading'></Spin>
        <Form ref='form'
              :label-width="100"
              :model="formModel"
              :rules="formRule">
          <FormItem label="设备识别码："
                    prop="name">
            <Input v-model="formModel.name"
                   placeholder="请输入识别码" />
          </FormItem>
          <FormItem label="设备名称："
                    prop="displayName">
            <Input v-model="formModel.displayName"
                   placeholder="请输入设备名称" />
          </FormItem>
          <FormItem label="设备负责人："
                    prop="mainUserGuid">
            <Select placeholder='请选择用户'
                    filterable
                    v-model="formModel.mainUserGuid">
              <Option v-for='(t,i) in userList'
                      :key='i'
                      :value="t.userGuid">{{t.fullName}}</Option>
            </Select>
          </FormItem>
          <FormItem label="设备类型："
                    prop="deviceType">
            <Select placeholder='请选择设备类型'
                    v-model="formModel.deviceType"
                    filterable>
              <Option v-for='(t,i) in deviceTypeList'
                      :key='i'
                      :value="t.value">{{t.label}}</Option>
            </Select>
          </FormItem>
          <FormItem label="设备描述："
                    prop="description">
            <Input v-model="formModel.description"
                   type='textarea'
                   placeholder="请输入设备描述" />
          </FormItem>
        </Form>
      </Modal>
    </Card>
    <editPassword ref='editPassword'
                  @on-success='getData()'></editPassword>
  </div>
</template>
<script>
import editPassword from "@/view/Device/editPassword.vue";
import mixins from "@/libs/mixins.js";
import { getUserList } from "@/api/data";
import { mapMutations } from 'vuex'
export default {
  name: "device",
  mixins: [mixins.commonPage],
  components: {
    editPassword
  },
  data () {
    return {
      url: "/MDevice",
      searchFields: {
        name: ''
      },
      tableFields: [
        {
          title: "设备识别码",
          key: "name",
          align: "center",

        },
        {
          title: "设备名称",
          key: "displayName",
          align: "center",

        },
        {
          title: "设备描述",
          key: "description",
          align: "center",

        },
        {
          title: "设备负责人",
          key: "mainUserFullName",
          align: "center",
        },
        {
          title: "设备类型",
          key: "deviceType",
          align: "center",
          render: (h, params) => {
            let device = this.deviceTypeList.find((t) => {
              return t.value == params.row.deviceType
            }).label
            return h("span", device);
          }
        },
      ],
      tableFieldsAction: {
        title: "操作",
        key: "action",
        width: 350,
        align: "center",
        render: (h, params) => {
          return h("div", [
            h(
              "Button", {
                props: {
                  icon: "md-lock",
                  type: "warning",
                  size: "small"
                },
                style: {
                  marginRight: "5px"
                },
                on: {
                  click: () => {
                    this.$refs['editPassword'].formOpenModal(params.row.id);
                  }
                }
              },
              "设置密码"
            ),
            h(
              "Button", {
                props: {
                  icon: "ios-funnel",
                  type: "info",
                  size: "small"
                },
                style: {
                  marginRight: "5px"
                },
                on: {
                  click: () => {
                    this.createTagQuery(params.row);
                  }
                }
              },
              "规则"
            ),
            h(
              "Button", {
                props: {
                  icon: "md-create",
                  type: "success",
                  size: "small"
                },
                style: {
                  marginRight: "5px"
                },
                on: {
                  click: () => {
                    this.formOpenModal(params.row[this.aliasId ? this.aliasId : 'id']);
                  }
                }
              },
              "修改"
            ),
            h(
              "Poptip", {
                props: {
                  confirm: true,
                  title: "您确定要删除这条数据吗?",
                  transfer: true
                },
                on: {
                  "on-ok": () => {
                    this.deleteData(params.row[this.aliasId ? this.aliasId : 'id']);
                  }
                }
              }, [
                h(
                  "Button", {
                    props: {
                      icon: "ios-trash",
                      type: "error",
                      size: "small"
                    }
                  },
                  "删除"
                )
              ]
            )
          ]);
        }
      },
      formModel: {
        name: "",
        displayName: "",
        description: "",
        deviceTypeText: "",
        userGuid: "",
        mainUserGuid: '',
        deviceType: "",
      },
      formRule: {
        name: { required: true, message: '设备识别码不能为空', trigger: 'change' },
        displayName: { required: true, message: '设备名称不能为空', trigger: 'change' },
        mainUserGuid: { required: true, message: '设备负责人不能为空', trigger: 'change' },
        deviceType: { required: true, type: "number", message: '设备类型不能为空', trigger: 'change' },

      },
      deviceTypeList: [{//设备类型列表
        value: 1,
        label: '考勤机'
      }, {
        value: 2,
        label: '门禁机'
      }],
      userList: [],//用户列表  

    };
  },
  computed: {},
  methods: {
    ...mapMutations([
      'addTag'
    ]),
    //跳转路由（门禁设备规则）的同时创建新标签
    createTagQuery (params) {
      const route = {
        name: 'DeviceRules_page',
        query: {
          id: params.id,
          displayName: params.displayName
        },
        meta: {
          title: `门禁设备规则-${params.displayName}`
        }
      }
      this.addTag({
        route: route,
        type: 'push'
      })
      this.$router.push(route)
    },
  },
  mounted () {
    //获取用户列表
    getUserList({
      pageSize: 0,
      curPage: 1,
    }).then((res) => {
      this.userList = res.data;
    })
  }
};
</script>
<style lang="less" scoped></style>